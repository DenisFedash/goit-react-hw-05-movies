{"version":3,"file":"static/js/669.b1f5508e.chunk.js","mappings":"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","sources":["components/MoviesCard/MoviesCard.styled.js","components/MoviesCard/MoviesCard.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.styled.js","pages/HomePage/HomePage.styled.js","components/SearchBar/SearchBar.jsx","pages/MoviesPage/MoviesPage.styled.js","pages/MoviesPage/MoviesPage.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  position: relative;\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n\n    transition-duration: 250ms;\n  }\n\n  :not(:last-child) {\n    @media screen and (max-width: 767px) {\n      margin-bottom: 20px;\n    }\n  }\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: center;\n    width: calc((100% - 4 * 15px) / 2);\n    margin: 15px;\n  }\n\n  @media screen and (min-width: 1024px) {\n    width: calc((100% - 6 * 15px) / 3);\n  }\n`;\n\nexport const ImageThumb = styled.div`\n  position: relative;\n  padding-bottom: 10px;\n  height: 440px;\n  border-radius: 5px;\n\n  transform: scale(1);\n  transition: transform 250ms linear;\n\n  @media screen and (min-width: 768px) {\n    width: 293px;\n  }\n  @media screen and (min-width: 1024px) {\n    width: 274px;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  height: 100%;\n  width: 100%;\n  object-fit: cover;\n  border-radius: 5px;\n`;\n\nexport const Title = styled.h2`\n  display: block;\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33;\n  text-transform: uppercase;\n  color: black;\n`;\n\nexport const Text = styled.p`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33;\n  color: #ff6b08;\n`;\n\nexport const Average = styled.p`\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: #ff6b08;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 40px;\n  height: 20px;\n\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.33;\n  border-radius: 5px;\n`;\n\nexport const CardLink = styled(Link)`\n  text-decoration: none;\n`;\n","import propTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport {\n  Item,\n  Image,\n  ImageThumb,\n  Title,\n  Text,\n  Average,\n  CardLink,\n} from './MoviesCard.styled';\n\nexport const MoviesCard = ({ title, id, poster, voteAverage, voteCount }) => {\n  const location = useLocation();\n\n  let URL =\n    'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-%27';\n\n  return (\n    <Item>\n      <CardLink to={`/movies/${id}`} state={{ from: location }}>\n        <ImageThumb>\n          <Image\n            src={poster ? `https://image.tmdb.org/t/p/w500${poster}` : URL}\n            alt={title}\n          />\n          <Average>{voteAverage}</Average>\n        </ImageThumb>\n\n        <div>\n          <Title> {title}</Title>\n          <Text>Vote count: {voteCount}</Text>\n        </div>\n      </CardLink>\n    </Item>\n  );\n};\n\nMoviesCard.prototype = {\n  id: propTypes.number,\n  title: propTypes.string,\n  poster: propTypes.string,\n  voteAverage: propTypes.number,\n  voteCount: propTypes.number,\n};\n","import styled from '@emotion/styled';\n\nexport const ContainerCards = styled.div`\n  min-height: 600px;\n  @media screen and (max-width: 767px) {\n    padding-top: 20px;\n    padding-bottom: 40px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding-top: 60px;\n    padding-bottom: 50px;\n  }\n`;\n\nexport const CardsList = styled.ul`\n  padding: 0;\n\n  @media screen and (min-width: 768px) {\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n    margin: -15px;\n  }\n`;\n","import { MoviesCard } from 'components/MoviesCard/MoviesCard';\nimport propTypes from 'prop-types';\nimport { CardsList, ContainerCards } from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n  return (\n    <ContainerCards>\n      <CardsList>\n        {movies.map(({ id, title, poster, voteAverage, voteCount }) => (\n          <MoviesCard\n            key={id}\n            id={id}\n            title={title}\n            poster={poster}\n            voteAverage={voteAverage}\n            voteCount={voteCount}\n          />\n        ))}\n      </CardsList>\n    </ContainerCards>\n  );\n};\n\nMovieList.prototype = {\n  movies: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number,\n      title: propTypes.string,\n      poster: propTypes.string,\n      voteAverage: propTypes.number,\n      voteCount: propTypes.number,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-top: 35px;\n  padding-bottom: 35px;\n\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    /* width: 768px; */\n\n    padding-left: 75px;\n    padding-right: 75px;\n  }\n  @media screen and (min-width: 1024px) {\n    /* width: 1024px; */\n    padding-left: 70px;\n    padding-right: 70px;\n  }\n`;\n\nexport const ContainerForm = styled.div`\n  padding-top: 35px;\n  padding-bottom: 35px;\n\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 75px;\n    padding-right: 75px;\n  }\n  @media screen and (min-width: 1024px) {\n    padding-left: 70px;\n    padding-right: 70px;\n  }\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  padding-bottom: 22px;\n  vertical-align: middle;\n  white-space: nowrap;\n  display: flex;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    width: 250px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 230px;\n  height: 20px;\n  background: rgba(0, 0, 0, 0);\n  border: none;\n  outline: none;\n  border-bottom: 0.5px solid orange;\n  font-size: $font-size-normal;\n  float: left;\n  color: $color-header-text;\n  padding: 4px 20px 4px 4px;\n  @media screen and (max-width: 768px) {\n    width: 200px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  color: orange;\n  width: 48px;\n  height: 35px;\n  border: 0px;\n  cursor: pointer;\n  outline: none;\n  background-color: white;\n`;\n\nexport const Svg = styled.span`\n  width: 1px;\n  height: 1px;\n  padding: 0px;\n  overflow: hidden;\n  clip: rect(0px, 0px, 0px, 0px);\n  white-space: nowrap;\n  border: 0px;\n  :hover,\n  :focus {\n    color: black;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 50px;\n`;\n","import { BiSearchAlt } from 'react-icons/bi';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Button, ContainerForm, Form, Input, Svg } from './SearchBar.styled';\n\nexport const SearchBar = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  function onSubmitForm(e) {\n    e.preventDefault();\n    const value = e.target.elements.query.value;\n\n    navigate({\n      ...location,\n      search: `query=${value}`,\n    });\n  }\n\n  return (\n    <ContainerForm>\n      <Form onSubmit={onSubmitForm}>\n        <Input type=\"text\" name=\"query\" placeholder=\"Search movies\" />\n        <Button type=\"submit\">\n          <Svg>\n            <BiSearchAlt size={20} />\n          </Svg>\n        </Button>\n      </Form>\n    </ContainerForm>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Warning = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  padding-bottom: 400px;\n\n  @media screen and (min-width: 768px) {\n    min-width: 768px;\n    padding-left: 75px;\n    padding-right: 75px;\n  }\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n    padding-left: 70px;\n    padding-right: 70px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchSearchMovies } from 'services/fetchAPI';\nimport { SearchBar } from 'components/SearchBar/SearchBar.jsx';\nimport { MovieList } from 'components/MovieList/MovieList.jsx';\nimport { Container } from 'pages/HomePage/HomePage.styled';\nimport { Warning } from './MoviesPage.styled';\n\nexport default function MoviesPage() {\n  const { search } = useLocation();\n  const query = new URLSearchParams(search).get('query') ?? '';\n\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    if (query !== '') {\n      fetchSearchMovies(query).then(({ results }) => {\n        const moviesArray = [];\n\n        results.map(\n          ({ id, original_title, poster_path, vote_average, vote_count }) => {\n            const movie = {\n              id,\n              title: original_title,\n              poster: poster_path,\n              voteAverage: vote_average,\n              voteCount: vote_count,\n            };\n\n            return moviesArray.push(movie);\n          }\n        );\n        setMovies(moviesArray);\n      });\n    }\n  }, [query]);\n\n  return (\n    <>\n      <SearchBar />\n      {movies < 1 && (\n        <Warning>\n          <h2>Movie list is empty 🙁</h2>\n          <p>Use search field!</p>\n        </Warning>\n      )}\n\n      {movies && (\n        <Container>\n          <MovieList movies={movies} />\n        </Container>\n      )}\n    </>\n  );\n}\n","const keyAPI = '89b7d98b05de36091af2815feb76deb7';\n\nasync function handlingResponseStatus(url = '', filter = {}) {\n  const response = await fetch(url, filter);\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopular() {\n  return handlingResponseStatus(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${keyAPI}`\n  );\n}\n\nexport function fetchSearchMovies(query, page = 1) {\n  return handlingResponseStatus(\n    `https://api.themoviedb.org/3/search/movie?api_key=${keyAPI}&language=en-US&page=${page}&query=${query}&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return handlingResponseStatus(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${keyAPI}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return handlingResponseStatus(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${keyAPI}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return handlingResponseStatus(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${keyAPI}&language=en-US`\n  );\n}\n"],"names":["Item","styled","ImageThumb","Image","Title","Text","Average","CardLink","Link","MoviesCard","title","id","poster","voteAverage","voteCount","location","useLocation","to","state","from","src","alt","prototype","propTypes","ContainerCards","CardsList","MovieList","movies","map","isRequired","Container","ContainerForm","Form","Input","Button","Svg","SearchBar","navigate","useNavigate","onSubmit","e","preventDefault","value","target","elements","query","search","type","name","placeholder","size","Warning","MoviesPage","URLSearchParams","get","useState","setMovies","useEffect","fetchSearchMovies","then","results","moviesArray","movie","original_title","poster_path","vote_average","vote_count","push","keyAPI","handlingResponseStatus","url","filter","fetch","response","ok","json","Promise","reject","Error","fetchPopular","page","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}