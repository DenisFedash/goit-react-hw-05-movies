{"version":3,"file":"static/js/544.0dc7a970.chunk.js","mappings":"mPAEaA,EAAaC,EAAAA,EAAAA,GAAH,oJASVC,EAAcD,EAAAA,EAAAA,GAAH,iHAOXE,EAAaF,EAAAA,EAAAA,EAAH,+J,wGCdVG,EAAa,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC3B,OACE,UAAC,KAAD,YACE,mBACA,wBACGA,EAAQC,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC1B,OACE,UAAC,KAAD,YACE,SAAC,KAAD,UAAcD,KACd,SAAC,KAAD,UAAaC,MAFEF,Y,2BCJd,SAASG,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,YAA9B,eAAOR,EAAP,KAAgBS,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBL,GAASM,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QAC3BC,EAAe,GACrBD,EAAQZ,KAAI,YAA8B,IAClCD,EAAU,CACdE,GAFqC,EAA1BA,GAGXC,OAHqC,EAAtBA,OAIfC,KAJqC,EAAdW,SAMzB,OAAOD,EAAaE,KAAKhB,MAE3BS,EAAWK,QAEZ,CAACR,IACGN,GAAWA,EAAQiB,OAAS,GACjC,SAAClB,EAAD,CAAYC,QAASA,KAErB,UAAC,KAAD,YACE,mBACA,SAAC,KAAD","sources":["components/ReviewList/Review.styled.js","components/ReviewList/ReviewList.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewItem = styled.li`\n  border: 1px solid orange;\n  border-radius: 5px;\n  padding: 15px;\n  :not(:last-child) {\n    margin-bottom: 25px;\n  }\n`;\n\nexport const ReviewTitle = styled.h2`\n  font-style: normal;\n  font-size: 20px;\n  line-height: 23px;\n  margin-bottom: 20px;\n`;\n\nexport const RevievText = styled.p`\n  font-weight: 500;\n  font-style: normal;\n  font-size: 12px;\n  line-height: 20px;\n  text-align: justify;\n  margin-bottom: 21px;\n`;\n","import { Container } from 'components/SearchBar/SearchBar.styled';\nimport PropTypes from 'prop-types';\nimport { ReviewItem, ReviewTitle, RevievText } from './Review.styled';\n\nexport const ReviewList = ({ reviews }) => {\n  return (\n    <Container>\n      <hr />\n      <ul>\n        {reviews.map(({ id, author, text }) => {\n          return (\n            <ReviewItem key={id}>\n              <ReviewTitle>{author}</ReviewTitle>\n              <RevievText>{text}</RevievText>\n            </ReviewItem>\n          );\n        })}\n      </ul>\n    </Container>\n  );\n};\n\nReviewList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      author: PropTypes.string,\n      text: PropTypes.string,\n    })\n  ),\n};\n","import { ReviewTitle } from 'components/ReviewList/Review.styled';\nimport { ReviewList } from 'components/ReviewList/ReviewList';\nimport { Container } from 'components/SearchBar/SearchBar.styled';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/fetchAPI';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState();\n\n  useEffect(() => {\n    fetchMovieReviews(movieId).then(({ results }) => {\n      const reviewsArray = [];\n      results.map(({ id, author, content }) => {\n        const reviews = {\n          id,\n          author,\n          text: content,\n        };\n        return reviewsArray.push(reviews);\n      });\n      setReviews(reviewsArray);\n    });\n  }, [movieId]);\n  return reviews && reviews.length > 0 ? (\n    <ReviewList reviews={reviews} />\n  ) : (\n    <Container>\n      <hr />\n      <ReviewTitle>We don't have any reviews for this movie.</ReviewTitle>\n    </Container>\n  );\n}\n"],"names":["ReviewItem","styled","ReviewTitle","RevievText","ReviewList","reviews","map","id","author","text","Reviews","movieId","useParams","useState","setReviews","useEffect","fetchMovieReviews","then","results","reviewsArray","content","push","length"],"sourceRoot":""}