{"version":3,"file":"static/js/91.9ccdf8de.chunk.js","mappings":"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","sources":["components/SearchBar/SearchBar.styled.js","components/DetailsPage/DetailsPage.styled.js","components/DetailsPage/About.jsx","components/DetailsPage/AdditionalInfo.jsx","components/DetailsPage/DetailsPage.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.js","pages/MovieDetailsPage/MovieDetailsPage.jsx","services/fetchAPI.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding-top: 35px;\n  padding-bottom: 35px;\n\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    /* width: 768px; */\n\n    padding-left: 75px;\n    padding-right: 75px;\n  }\n  @media screen and (min-width: 1024px) {\n    /* width: 1024px; */\n    padding-left: 70px;\n    padding-right: 70px;\n  }\n`;\n\nexport const ContainerForm = styled.div`\n  padding-top: 35px;\n  padding-bottom: 35px;\n\n  padding-left: 20px;\n  padding-right: 20px;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media screen and (min-width: 768px) {\n    width: 768px;\n    padding-left: 75px;\n    padding-right: 75px;\n  }\n  @media screen and (min-width: 1024px) {\n    padding-left: 70px;\n    padding-right: 70px;\n  }\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  padding-bottom: 22px;\n  vertical-align: middle;\n  white-space: nowrap;\n  display: flex;\n  justify-content: center;\n\n  @media screen and (min-width: 768px) {\n    width: 250px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 230px;\n  height: 20px;\n  background: rgba(0, 0, 0, 0);\n  border: none;\n  outline: none;\n  border-bottom: 0.5px solid orange;\n  font-size: $font-size-normal;\n  float: left;\n  color: $color-header-text;\n  padding: 4px 20px 4px 4px;\n  @media screen and (max-width: 768px) {\n    width: 200px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  color: orange;\n  width: 48px;\n  height: 35px;\n  border: 0px;\n  cursor: pointer;\n  outline: none;\n  background-color: white;\n`;\n\nexport const Svg = styled.span`\n  width: 1px;\n  height: 1px;\n  padding: 0px;\n  overflow: hidden;\n  clip: rect(0px, 0px, 0px, 0px);\n  white-space: nowrap;\n  border: 0px;\n  :hover,\n  :focus {\n    color: black;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const CinemaCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Poster = styled.img`\n  margin-bottom: 30px;\n  margin-right: 25px;\n  border-radius: 5px;\n  width: 100%;\n  height: 100%;\n  @media screen and (min-width: 768px) {\n    width: 768px;\n  }\n  @media screen and (min-width: 1024px) {\n    width: 1024px;\n  }\n`;\n\nexport const CardTitle = styled.h1`\n  line-height: 33px;\n  margin-bottom: 20px;\n`;\n\nexport const ReleaseDate = styled.span`\n  display: flex;\n`;\n\nexport const Date = styled.p`\n  margin-bottom: 10px;\n  margin-left: 10px;\n  :nth-last-of-type {\n    margin-bottom: 20px;\n  }\n\n  font-weight: 500;\n  font-style: normal;\n\n  line-height: 16px;\n  color: black;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n`;\n\nexport const GenresItem = styled.li`\n  margin-bottom: 5px;\n  :not(:last-child) {\n    margin-right: 5px;\n  }\n  :nth-last-of-type {\n    margin-bottom: 20px;\n  }\n\n  font-weight: 500;\n  font-style: normal;\n\n  line-height: 16px;\n  color: orange;\n`;\n\nexport const Genres = styled.span`\n  font-weight: 500;\n  font-style: normal;\n\n  line-height: 16px;\n  color: black;\n`;\n\nexport const TitleAbout = styled.h2`\n  font-style: normal;\n  font-size: 20px;\n  line-height: 23px;\n  margin-bottom: 20px;\n  margin-top: 20px;\n`;\n\nexport const AboutText = styled.div`\n  font-weight: 500;\n  font-style: normal;\n  font-size: 12px;\n  line-height: 20px;\n  text-align: justify;\n  margin-bottom: 21px;\n`;\n\nexport const InfoItem = styled.li`\n  margin-bottom: 10px;\n  display: flex;\n\n  :not(:last-child) {\n    margin-right: 50px;\n  }\n  :nth-last-of-type {\n    margin-bottom: 20px;\n  }\n\n  font-weight: 500;\n  font-style: normal;\n\n  line-height: 16px;\n  color: orange;\n`;\n\nexport const Votes = styled.div`\n  margin-left: 5px;\n  font-size: large;\n  color: black;\n`;\n\nexport const CustomItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const CustomLink = styled(NavLink)`\n  font-weight: 500;\n  font-style: normal;\n  line-height: 20px;\n  color: orange;\n  text-decoration: none;\n  :hover,\n  :focus {\n    color: black;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport {\n  AboutText,\n  InfoItem,\n  List,\n  TitleAbout,\n  Votes,\n} from './DetailsPage.styled';\n\nexport const About = ({ description, voteAverage, voteCount }) => {\n  return (\n    <>\n      <TitleAbout>About</TitleAbout>\n      <AboutText>{description}</AboutText>\n      <List>\n        <InfoItem>\n          Vote average: <Votes>{voteAverage}</Votes>\n        </InfoItem>\n        <InfoItem>\n          Vote count: <Votes>{voteCount}</Votes>\n        </InfoItem>\n      </List>\n    </>\n  );\n};\n\nAbout.propType = {\n  description: PropTypes.string,\n  voteAverage: PropTypes.number,\n  voteCount: PropTypes.number,\n};\n","import { useLocation } from 'react-router-dom';\nimport { CustomItem, CustomLink, TitleAbout } from './DetailsPage.styled';\nimport { IoMdArrowDropright } from 'react-icons/io';\n\nexport const AdditionalInfo = () => {\n  const location = useLocation();\n  return (\n    <>\n      <TitleAbout>Additional Information</TitleAbout>\n      <ul>\n        <CustomItem>\n          <CustomLink to=\"cast\" state={{ from: location }}>\n            <IoMdArrowDropright />\n            Cast\n          </CustomLink>\n        </CustomItem>\n        <CustomItem>\n          <CustomLink to=\"reviews\" state={{ from: location }}>\n            <IoMdArrowDropright />\n            Reviews\n          </CustomLink>\n        </CustomItem>\n      </ul>\n    </>\n  );\n};\n","import propTypes from 'prop-types';\nimport { Container } from 'components/SearchBar/SearchBar.styled';\nimport {\n  Poster,\n  CinemaCard,\n  CardTitle,\n  Date,\n  GenresItem,\n  ReleaseDate,\n  Genres,\n} from './DetailsPage.styled';\nimport { About } from './About';\nimport { AdditionalInfo } from './AdditionalInfo';\n\nexport const DetailsPage = ({ movieInfo }) => {\n  let URL =\n    'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-%27';\n\n  const {\n    title,\n    genres,\n    description,\n    poster,\n    releaseDate,\n    voteAverage,\n    voteCount,\n  } = movieInfo;\n\n  const formattedReleaseDate = releaseDate.split('-').reverse().join('.');\n\n  const movieGenres =\n    movieInfo !== null ? genres.map(genre => genre.name).join(', ') : 'Unknown';\n\n  return (\n    <Container>\n      <CinemaCard>\n        <Poster\n          src={poster ? `https://image.tmdb.org/t/p/w500${poster}` : { URL }}\n          alt={title}\n        />\n        <div>\n          <div>\n            <CardTitle>{title}</CardTitle>\n            <ReleaseDate>\n              Release Date:<Date>{formattedReleaseDate}</Date>\n            </ReleaseDate>\n          </div>\n          <ul>\n            <GenresItem>\n              <Genres>Genres: </Genres>\n              {movieGenres}\n            </GenresItem>\n          </ul>\n          <About\n            description={description}\n            voteAverage={voteAverage}\n            voteCount={voteCount}\n          />\n        </div>\n      </CinemaCard>\n\n      <AdditionalInfo />\n    </Container>\n  );\n};\n\nDetailsPage.propTypes = {\n  movieInfo: propTypes.shape({\n    title: propTypes.string,\n    genres: propTypes.arrayOf(\n      propTypes.shape({\n        id: propTypes.number,\n        name: propTypes.string,\n      })\n    ),\n    poster: propTypes.string,\n    releaseDate: propTypes.string,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  display: block;\n  border: none;\n  background-color: orange;\n  border-radius: 5px;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  cursor: pointer;\n\n  :hover,\n  :focus {\n    background-color: teal;\n  }\n`;\n\nexport const ButtonText = styled.span`\n  margin-left: 10px;\n`;\n","import { DetailsPage } from 'components/DetailsPage/DetailsPage';\nimport { lazy, Suspense, useEffect, useState } from 'react';\nimport {\n  Route,\n  Routes,\n  useLocation,\n  useNavigate,\n  useParams,\n} from 'react-router-dom';\nimport * as fetchAPI from '../../services/fetchAPI.js';\nimport { RiArrowGoBackLine } from 'react-icons/ri';\nimport { Button, ButtonText } from './MovieDetailsPage.styled';\nimport { Container } from 'components/SearchBar/SearchBar.styled';\nimport { Loader } from 'components/Loader/Loader.jsx';\n\nconst Cast = lazy(() => import('../Cast/Cast'));\nconst Reviews = lazy(() => import('../Reviews/Reviews'));\n\nexport default function MovieDetailsPage() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n\n  useEffect(() => {\n    fetchAPI\n      .fetchMovieDetails(movieId)\n      .then(\n        ({\n          original_title,\n          genres,\n          overview,\n          poster_path,\n          release_date,\n          vote_average,\n          vote_count,\n        }) => {\n          const movieInfo = {\n            title: original_title,\n            genres: genres,\n            description: overview,\n            poster: poster_path,\n            releaseDate: release_date,\n            voteAverage: vote_average,\n            voteCount: vote_count,\n          };\n          return setMovieInfo(movieInfo);\n        }\n      );\n  }, [movieId]);\n\n  const onGoBack = () => navigate(location?.state?.from ?? '/');\n\n  return (\n    <Container>\n      <Button type=\"button\" onClick={onGoBack}>\n        <RiArrowGoBackLine />\n        <ButtonText>Back</ButtonText>\n      </Button>\n      {movieInfo < 1 && <Loader />}\n      {movieInfo && <DetailsPage movieInfo={movieInfo} />}\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast />} />\n          <Route path=\"reviews\" element={<Reviews />} />\n        </Routes>\n      </Suspense>\n    </Container>\n  );\n}\n","const keyAPI = '89b7d98b05de36091af2815feb76deb7';\n\nasync function handlingResponseStatus(url = '', filter = {}) {\n  const response = await fetch(url, filter);\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopular() {\n  return handlingResponseStatus(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${keyAPI}`\n  );\n}\n\nexport function fetchSearchMovies(query, page = 1) {\n  return handlingResponseStatus(\n    `https://api.themoviedb.org/3/search/movie?api_key=${keyAPI}&language=en-US&page=${page}&query=${query}&include_adult=false`\n  );\n}\n\nexport function fetchMovieDetails(movieId) {\n  return handlingResponseStatus(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${keyAPI}&language=en-US`\n  );\n}\n\nexport function fetchMovieCredits(movieId) {\n  return handlingResponseStatus(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${keyAPI}&language=en-US`\n  );\n}\n\nexport function fetchMovieReviews(movieId) {\n  return handlingResponseStatus(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${keyAPI}&language=en-US`\n  );\n}\n"],"names":["Container","styled","ContainerForm","Form","Input","Button","Svg","CinemaCard","Poster","CardTitle","ReleaseDate","Date","List","GenresItem","Genres","TitleAbout","AboutText","InfoItem","Votes","CustomItem","CustomLink","NavLink","About","description","voteAverage","voteCount","propType","PropTypes","AdditionalInfo","location","useLocation","to","state","from","DetailsPage","movieInfo","title","genres","poster","releaseDate","formattedReleaseDate","split","reverse","join","movieGenres","map","genre","name","src","URL","alt","ButtonText","Cast","lazy","Reviews","MovieDetailsPage","navigate","useNavigate","movieId","useParams","useState","setMovieInfo","useEffect","fetchAPI","then","original_title","overview","poster_path","release_date","vote_average","vote_count","type","onClick","Loader","Suspense","fallback","path","element","keyAPI","handlingResponseStatus","url","filter","fetch","response","ok","json","Promise","reject","Error","fetchPopular","fetchSearchMovies","query","page","fetchMovieDetails","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}